{"version":3,"sources":["apiinfo.js","Scripts/utils.js","images/tmdb_logo.svg","components/Preloader.js","Contexts/ImageCardContext.js","components/FavCarousel.js","components/CarouselInfo.js","components/Jumbotron.js","App.js","index.js"],"names":["apikey","listId","dataHandler","screenHandler","trendHandler","a","apiData","index","size","fetch","then","res","json","baseUrl","images","base_url","items","forEach","element","obj","url","poster_path","title","original_title","rating","vote_average","overview","push","movieObj","results","arrayObj","path","image_path","paginationReducer","state","action","Preloader","props","className","src","logo","id","style","alt","href","children","ImageCardContext","createContext","ImageContextProvider","useState","description","imageInfo","setInfo","Provider","value","reducer","ImageCardStyle","Styled","div","scaled","CardCarouselContainer","current","FavCarousel","useReducer","count","dispatch","map","image","data","highlight","onWheel","e","handler","deltaY","handleWheel","ImageCard","setHighlight","highlightHelper","useContext","infoObj","useEffect","Math","abs","CarouselInfo","field","document","getElementById","currentScroll","scrollTop","scrollTo","console","log","handleScroll","JumboItem","styled","Jumbotron","movie","Sect","section","color","App","currentScreen","setScreen","setData","trendingData","setTrending","paginationChunk","setChunk","paginationIndex","setPaginationIndex","currentPagination","screen","currenPosition","window","scrollY","windowHeight","innerHeight","startTime","Date","now","distance","smoothScrollTo","b","t","elapsedTime","percentTime","requestAnimationFrame","dataFetcher","onwheel","preventDefault","wheelHandler","slice","onClick","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.703288b5.chunk.js","sourcesContent":["/*\nInformation about my api\n\n*/\n\n\n\n\nexport const apikey = \"204136600090e24124b9f4d6fecc8b71\";\nexport let listId = \"7064440\";","import {apikey, listId} from \"./../apiinfo\";\n\nexport async function dataFetcher(dataHandler, screenHandler, trendHandler){\n    \n    /* \n    This function fetches data from TMDb-api and returns it to the main app component\n    */\n    \n    let baseUrl, items, obj;\n    let apiData = [];\n    let index = 0;\n    let size = \"w500\";\n    \n    await fetch(`https://api.themoviedb.org/3/configuration?api_key=${apikey}`).then(res => res.json()).then(res => {\n        baseUrl = res.images.base_url;\n    });\n\n    await fetch(`https://api.themoviedb.org/3/list/${listId}?api_key=${apikey}`).then(res => res.json()).then(res => {\n        items = res.items;\n    })\n\n    items.forEach(element => {\n        if (index < 8){\n            obj = {\n                url: baseUrl + size + element.poster_path,\n                title: element.original_title,\n                rating: element.vote_average,\n                overview: element.overview\n            }\n            apiData.push(obj);\n        }\n\n\n    });\n\n    // Data fetched from my list is given to the api.\n    dataHandler(apiData);\n\n    fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${apikey}`).then(res => res.json())\n    .then(res => {\n        let movieObj = res.results;\n        let arrayObj = [];\n        movieObj.forEach(element => {\n            let path = element.poster_path;\n            element.image_path = baseUrl + size + path;\n            arrayObj.push(element);\n        });\n        trendHandler(movieObj)});\n\n}\n\nexport function screenHandler(screen){\n    /*\n    \n    This function is reponsible for smooth scroll between different components of the application\n\n    */\n    \n    const currenPosition = window.scrollY;\n    const windowHeight = window.innerHeight;\n    const duration = 1000;\n    const startTime = Date.now();\n    const endPosition = screen * windowHeight;\n    const distance = endPosition - currenPosition;\n\n    smoothScrollTo();\n    \n    function smoothScrollTo(){\n        \n        const currentTime = Date.now();\n        const elapsedTime = currentTime - startTime;\n        const percentTime = elapsedTime / duration;\n\n        if (elapsedTime < duration) {\n            window.scrollTo(0, currenPosition + (distance * min(1, ease(percentTime))));\n            window.requestAnimationFrame(smoothScrollTo);\n\n        } else {\n            window.scrollTo(0, windowHeight * screen);\n        }\n\n        function min(a,b){\n            return a < b ? a : b;\n        }\n\n        function ease(t){\n            return t * t;\n        }\n        \n    }\n}\n\nexport function wheelHandler(e, handler){\n    e.preventDefault();\n    \n    const jumbotron = document.getElementById(\"jumbo-cont\");\n    jumbotron.onwheel = (e) => {\n        if (e.deltaY > 0) {\n            handler(\"increment\");\n        } else {\n            handler(\"decrement\");\n        }\n    }\n}\n\nexport const paginationReducer = (state, action) => {\n    switch (action){\n        case \"increment\":\n            if (state < 3) {\n                return state + 1;\n            } else {\n                return state;\n            }\n            \n        case \"decrement\":\n            if (state == 0) {\n                return state;\n            } else{\n                return state - 1;\n            }\n            \n        default:\n            return state;\n    }\n}\n","export default __webpack_public_path__ + \"static/media/tmdb_logo.de1a664e.svg\";","import logo from \"../images/tmdb_logo.svg\"\n\nexport const Preloader = (props) => {\n    return (\n    <div className=\"preloader-cont\">\n        <img src={logo} id=\"logo-image\"style={{\"width\": 600}} alt=\"logo\"/>\n        <div className=\"preloader-text\"><p>All the images and data here belong to awesome\n              <a href=\"https://www.themoviedb.org/?language=fi\">TMDb-website.</a><br></br><br></br>\n            \n             I only created the layout of the page, animations and visuals. Please support them since they allow\n             for people to make awesome stuff like this. Most elements on the page have somekind of scroll effect,\n             so make sure you dont miss it!</p></div>\n        {props.children}\n    </div>\n    );\n}","import { createContext, useState } from \"react\";\n\nexport const ImageCardContext = createContext();\n\n\nexport const ImageContextProvider = (props) => {\n    \n    const imageObj = {\n        title: \"Lol\",\n        rating: 9.1,\n        description: \"Vitun hyvä leffa\"\n    }\n    const [imageInfo, setInfo] = useState( imageObj );\n\n    const toggleActive = (obj) => {\n        setInfo(obj);\n    }\n\n    return (\n        <ImageCardContext.Provider value={[{...imageInfo}, toggleActive]}>\n            {props.children}\n        </ImageCardContext.Provider>\n    );\n}","import Styled from \"styled-components\";\nimport { useEffect, useReducer, useState, useContext } from \"react\";\nimport { ImageCardContext } from \"../Contexts/ImageCardContext\";\n\n/* \n\n\n\n*/\nlet initialState = 0;\n\nconst reducer = (state, action) => {\n    switch(action) {\n        case \"increment\":\n            return state + 1;\n        case \"decrement\":\n            return state - 1;\n        case \"reset\":\n            return initialState;\n        default:\n            return state;\n    }\n}\n\n\nconst ImageCardStyle = Styled.div`\n    height: auto;\n    position: absolute;\n    border: 1px solid black;\n    transform: rotateY(${props => props.index * 45}deg) translateZ(500px);\n    scale: ${props => props.scaled ? 1.2 : 1};\n    transition: 1s;\n`\nconst CardCarouselContainer = Styled.div`\n    width: 300px;\n    height: 450px;\n    position: relative;\n    transform-style: preserve-3d;\n    transform: perspective(3000px) rotateY(${props => props.current * 45}deg);\n    transition: linear 1s;\n`\n\nexport const FavCarousel = (props) => {\n\n    const [count, dispatch] = useReducer(reducer, initialState);\n\n    return (\n        <div className=\"carousel\">\n            <CardCarouselContainer current={count}>\n                \n                {props.images.map((image, index) => <ImageCard key={index} index={index} data={image} highlight={count}/>)}\n\n            </CardCarouselContainer>\n            <div className=\"scroll-hitbox\" onWheel={e => handleWheel(e, dispatch)}>\n            </div>\n        {props.children}\n        </div>\n    )\n\n    function handleWheel(e, handler){\n        if (e.deltaY > 0) {\n            handler(\"decrement\");\n        } else {\n            handler(\"increment\");\n        }\n    }\n}\n\nconst ImageCard = (props) => {\n\n    const [highlight, setHighlight] = useState(false);\n    const highlightHelper = props.highlight % 8;\n    const data = useContext(ImageCardContext);\n    const handler = data[1];\n    const infoObj = {\n        title: props.data.title,\n        rating: props.data.rating,\n        description: props.data.overview\n    }\n\n    useEffect(() => {\n\n        if (highlightHelper > 0) {\n            if (highlightHelper == Math.abs(props.index - 8)) {\n                setHighlight(true);\n                handler(infoObj);\n            }   else {\n                setHighlight(false);\n            }\n        } else {\n            if (Math.abs(highlightHelper) == props.index) {\n                setHighlight(true);\n                handler(infoObj);\n            } else {\n                setHighlight(false);\n            }\n        }\n    }, [props.highlight]);\n    \n    return (\n\n        <ImageCardStyle index={props.index} scaled={highlight}>\n            <img className=\"carouselImage\" src={props.data.url}/>\n        </ImageCardStyle>\n\n    );\n\n}","import { useContext } from 'react';\nimport { ImageCardContext } from \"../Contexts/ImageCardContext\"\n\n\nexport const CarouselInfo = (props) => {\n    const data = useContext(ImageCardContext);\n\n    return (\n        <div className=\"carouselInfoCont\">\n            <div className=\"carousel-info-header-cont\">\n                <h1>{data[0].title}</h1>\n            </div>\n            <div className=\"carousel-info-body-cont\">\n                <div className=\"carousel-info-body-rating\"><p>{data[0].rating}</p></div>\n                <div id=\"text-field\" onWheel={e => handleScroll(e)} className=\"carousel-info-body-text\">{data[0].description}</div>\n            </div>\n            {props.children}\n        </div>\n    );\n\n    function handleScroll(e){\n        const field = document.getElementById(\"text-field\");\n        const currentScroll = field.scrollTop;\n        if (e.deltaY > 0) {field.scrollTo(0, currentScroll + 10);}\n        else  {\n            field.scrollTo(0, currentScroll - 10);\n        }\n\n        console.log(currentScroll);\n\n    }\n}","import styled from \"styled-components\";\n\nconst JumboItem = styled.div`\n    // This is achieved with styled component because of my original plans\n    width: 20%;\n    height: 100%;\n    border: 1px solid black;\n    box-sizing: border-box;\n`\n\nexport const Jumbotron = (props) => {\n\n    return (\n        <JumboItem>\n            <div className=\"jumbo-imagediv\">\n                <img className=\"jumbo-image\" src={props.movie.image_path} alt={props.movie.title}/>\n            </div>\n            <div className=\"jumbo-infodiv\">\n                <p className=\"trendingDescription\">{props.index + 1}.{props.movie.title}</p>\n                <p>{props.movie.overview}</p>\n            </div>\n        </JumboItem>\n    );\n}","import styled from \"styled-components\";\nimport { useEffect, useReducer, useState } from \"react\";\nimport {screenHandler, dataFetcher, wheelHandler, paginationReducer} from \"./Scripts/utils\";\nimport { generateToken, parseUrl, printStorage } from \"./Scripts/adminScripts\";\nimport { Preloader } from \"./components/Preloader\";\nimport { FavCarousel } from \"./components/FavCarousel\";\nimport { CarouselInfo } from \"./components/CarouselInfo\";\nimport { ImageContextProvider } from \"./Contexts/ImageCardContext\";\nimport { Jumbotron } from \"./components/Jumbotron\";\nimport \"./appStyle.css\";\n\nconst Sect = styled.section`\n  background-color: ${props => props.color || \"orange\"};\n  height: 100vh;\n  display:flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`\n\nfunction App() {\n  \n  const pagination = 5;\n  const [currentScreen, setScreen] = useState(0);\n  const [apiData, setData] = useState([]);\n  const [trendingData, setTrending] = useState([]);\n  const [paginationChunk, setChunk] = useState([]);\n  const [paginationIndex, setPaginationIndex] = useReducer(paginationReducer, 0);\n  let currentPagination = pagination * paginationIndex;\n\n\n  \n  useEffect(() => {\n    \n    if (currentScreen > 0) {\n      screenHandler(currentScreen);\n    }\n    \n  }, [currentScreen]);\n\n\n  useEffect(() => {\n    dataFetcher(setData, setScreen, setTrending);\n    window.onwheel = (e) => wheelHandler(e, setPaginationIndex);\n  }, [])\n\n  useEffect(() => {\n      setChunk(trendingData.slice(currentPagination, currentPagination + pagination))\n  }, [trendingData, paginationIndex, currentPagination])\n\n  return (\n    <div className=\"App\">\n      <Sect color=\"black\">\n        <Preloader>\n        {apiData != [] ? <button onClick={() => setScreen(1)}>Click</button> : <p>Loading</p>}\n        </Preloader>\n      </Sect>\n      <Sect color=\"black\">\n        <h1 id=\"carousel-header\">My favourites</h1>\n          <div className=\"carousel-wrapper\">\n            <div className=\"carouselCont\">\n            <ImageContextProvider>\n                <FavCarousel images={apiData}/>\n                \n                  <CarouselInfo>\n                  </CarouselInfo>\n\n            </ImageContextProvider>\n              \n            </div>\n          </div>\n          <div className=\"button\" id=\"favs-to-trend\" onClick={() => setScreen(2)}>To Trending</div>\n      </Sect>\n      <Sect color=\"black\">\n        <h1 id=\"trending-header\">Trending</h1>\n        <div className=\"jumbo-container\" id=\"jumbo-cont\">\n          {paginationChunk.map((movie, index) => <Jumbotron movie={movie} index={index+ currentPagination} key={index}/>)}\n        </div>\n        <div className=\"button\" id=\"trend-to-favs\" onClick={() => setScreen(1)}>To Favourites</div>\n        <div className=\"button\" id=\"trend-to-sign\" onClick={() => setScreen(3)}>To Signature</div>\n      </Sect>\n      <Sect color=\"black\">\n        <div className=\"button\" id=\"sign-to-trend\" onClick={() => setScreen(2)}>To trending</div>\n        <div className=\"signature-wrapper\">\n          <div className=\"signature-wrapper-text\">\n            <p>This website was done using purely react hooks. I mainly wanted to prove my understanding of fundamental react\n            concepts. All data is taken from <a href=\"https://www.themoviedb.org/?language=fi\">tmdb api</a></p>\n          </div>\n          <h1>Pyry Saarinen</h1>\n          </div>\n      </Sect>\n\n    </div>\n   \n\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}